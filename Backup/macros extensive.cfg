

###########################################################################
# Macros from Euclid with improved start print, resume print, pause, etc
##########################################################################

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  MACROS required for the base configuration
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#...................................................................................................
[gcode_macro _PARK_TOOLHEAD]
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}

    M118 Parking toolhead.
    G90
    # park nozzle at top (at least 75% or Z max or Z + 10) front-right but allow room for hotend fan to pull air
    G0 X{X_MAX} Y20 Z{ [(Z_MAX*0.75), [Z_POS, Z_MAX]|min]|max } F3600 



#...................................................................................................
[gcode_macro CURRENT_HIGH]
description: Raises stepper current for printing routine.
# Setting are for Moons' MS17HD6P420I-04, Rated current @ 2A, Maximum current in RMS = 1.4
# but also consider stepper driver and cooling
gcode:
    M117 Increased motor currents. #    <----------------<----------------<----------------<----------------<----------------<---<Stepper Print Currents<<<
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT=1.1
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT=1.1
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.8
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.8



#...................................................................................................
[gcode_macro CURRENT_NORMAL]
description: Lowers stepper current for NON-printing routines, as set in [tmc2209 stepper_XX] above.
gcode:
    M117 Decreased motor currents.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={ printer.configfile.config["tmc2209 stepper_x"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={ printer.configfile.config["tmc2209 stepper_y"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={ printer.configfile.config["tmc2209 stepper_z"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={ printer.configfile.config["tmc2209 stepper_z1"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={ printer.configfile.config["tmc2209 stepper_z2"]["run_current"] }
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={ printer.configfile.config["tmc2209 stepper_z3"]["run_current"] } 



#...................................................................................................
[gcode_macro _HEAT_WAIT]
gcode:
    {% set MINUTES = params.MINUTES|default(12)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Warming... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
            SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=0 BLUE=0
            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=.5
            G4 P500
            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=.5
            SET_LED LED=nozzle INDEX=2 RED=.5 GREEN=0 BLUE=0
            G4 P500
        {% endfor %}
    {% endfor %}



#...................................................................................................
[gcode_macro _COOL_WAIT]
gcode:
    M106 S250
    {% set MINUTES = params.MINUTES|default(1)|int %}
    {% for i in range(0, MINUTES) %}
        M117 Cooling... {MINUTES-i} minute remaining.
        {% for s in range(0, 60) %}
            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=0
            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=.5
            G4 P500
            SET_LED LED=nozzle INDEX=1 RED=0 GREEN=0 BLUE=.5
            SET_LED LED=nozzle INDEX=2 RED=0 GREEN=0 BLUE=0
            G4 P500
        {% endfor %}
    {% endfor %}
    M107



#...................................................................................................
[gcode_macro HOTMESH]
gcode:
    CLEAR_PAUSE
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
        SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
        # Bring bed to full temperature, only warm hotend
        M140 S{BED_TEMP}
        M104 S160 
        G90 
        # Reset the G-Code Z offset
        SET_GCODE_OFFSET Z=0.0
        M117 Performing initial homing.
        G32
        # Move the nozzle
        G1 X0 Y20 Z25 F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES=20 #    <----------------<----------------<----------------<----------------<----------------<--------<Hotmesh Heatsoak Minutes<<<
        SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
        M117 Performing hot level.
        CURRENT_HIGH
        M400
        BED_MESH_CLEAR
        G28
        QUERY_PROBE
        {% if printer.probe.last_query %}
            M118 Fetching Euclid Probe.
            _PROBE_DEPLOY
        {% endif %}
        QUAD_GANTRY_LEVEL_ORIGINIAL
        G28
        M117 Performing heated bed mesh calibration.
        BED_MESH_PROFILE REMOVE=HOTMESH
        BED_MESH_CALIBRATE_ORIGINIAL
        BED_MESH_PROFILE SAVE=HOTMESH
        BED_MESH_OUTPUT PGP=1
        M118 Bed mesh calibration completed.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        M402
        _PARK_TOOLHEAD
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
        M117 Finished mesh.
        SAVE_CONFIG
    {% endif %}



#...................................................................................................
[gcode_macro PRINT_START]
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
   # SET_LED LED=nozzle RED=.2 GREEN=.2 BLUE=1
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}  
    # Bring bed to full temperature, only warm hotend
    M140 S{BED_TEMP}
    M104 S160
    G90
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    M117 Performing initial homing.
    G32
    # Move the nozzle
    G1 X0 Y20 Z25 F3000
    M117 Bringing bed to temperature.
    SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
    M190 S{BED_TEMP}
    _HEAT_WAIT MINUTES=15 #    <----------------<----------------<----------------<----------------<----------------<------------<Pre-Print Heatsoak Minutes<<<
    SET_LED LED=nozzle RED=.5 GREEN=0 BLUE=.5
    M117 Performing hot level.
    CURRENT_HIGH
    M400
    G3200
    M104 S{EXTRUDER_TEMP}
    G1 X0 Y20 F5000.0
    G1 Z0.5
    M117 Bringing nozzle to temperature.
    #SET_LED LED=nozzle INDEX=2 RED=1 GREEN=0 BLUE=0
    #SET_LED LED=nozzle INDEX=1 RED=.5 GREEN=.5 BLUE=.5
    M109 S{EXTRUDER_TEMP}
    M117 Purging the extruder.
    #SET_LED LED=nozzle RED=1 GREEN=0 BLUE=0
    # Purge line start
    G1 X0 Y19.8 Z0.3 F1500.0
    G1 E{(12.5 * NZLD)} F3600
    M400    
    G1 X0 Y0 Z0.3 F1500.0
    G1 X130 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}
    G1 X130 Y0.3 Z0.3 F5000.0
    G1 X010 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}
    M400
    G92 E0
    # Purge line completed
    G1 Z5.0 F3000
    M117 Printing gcode file.
    #SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=.5



#...................................................................................................
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}  
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    TURN_OFF_HEATERS
    CURRENT_NORMAL
    G91
    G0 Z5
    G90
    M400
    _COOL_WAIT MINUTES=1
    _PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES=2 #    <----------------<----------------<----------------<----------------<----------------<-------------<Post-Print Cooldown Minutes<<<
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
    M117 Finished printing, check nozzle clear.
    M118 Finished printing, check nozzle clear.



#...................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(0) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
        G1 Z{z_safe}
        G90
        G1 X{x} Y{y} F6000
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}



[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
        {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
    {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
    {% set Z_POS = printer.toolhead.position.z + 10 %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    CURRENT_NORMAL
    M106 S250
    G90
    _PARK_TOOLHEAD
    M18 X Y E
    M107                           ; turn off fan
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _COOL_WAIT MINUTES=3           ; Cancelled Print Cooldown Minutes<<<
    SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
    M117 Cancelled print, check nozzle clear.
    M118 Cancelled print, check nozzle clear.
    


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
           SAVE_GCODE_STATE NAME=HLF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E50 F400               ; prime extruder
            G0 E50 F400               ; prime extruder
            G0 E50 F200               ; prime extruder
            G1 E-0.5 F1800            ; .5mm retraction
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HLF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
            G28
        {% endif %}
        {% set TEMP = params.TEMP|default(235)|float %}
        M117 Heating nozzle to LOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
        M109 S{TEMP}              ; set hotend temperature and wait
        M83                       ; relative positioning on extruder    
        G0 E50 F400               ; prime extruder
        G0 E50 F400               ; prime extruder
        G0 E50 F200               ; prime extruder
        G1 E-0.5 F1800            ; .5mm retraction
        G92 E0                    ; reset extruder
        M400
	_PARK_TOOLHEAD
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament load.
    {% endif %}


[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {% if printer.idle_timeout.state == "Printing" and printer.pause_resume.is_paused %}
            SAVE_GCODE_STATE NAME=HUF_state
            M83                       ; relative positioning on extruder    
            G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G0 E-50 F1000             ; retract additional filament to move out of melt zone
            G92 E0                    ; reset extruder
            M400
            RESTORE_GCODE_STATE NAME=HUF_state
        {% else %}
            {action_respond_info("Pause print first.")}
        {% endif %}
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M117 Performing required homing.
            G28
        {% endif %}
        {% set TEMP = params.TEMP|default(235)|float %}
        M117 Heating nozzle to UNLOAD filamnet.
        G90                       ; absolute positioning
        G0 X{X_MID} Y20 F3500     ; move to area where can easily load filament  
        M109 S{TEMP}              ; set hotend temperature and wait    
        M83                       ; relative positioning on extruder
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G0 E-50 F1000             ; retract additional filament to move out of melt zone
        G92 E0                    ; reset extruder
        M400
	_PARK_TOOLHEAD
        M18 X Y E
        TURN_OFF_HEATERS
        M117 Finished filament unload.
    {% endif %}





############################################################
#  Neopixel macros
###########################################################

[gcode_macro ChamberLED_ON]
gcode:
    SET_LED LED=ChamberLED GREEN=0.9 RED=0.9 BLUE=0.9

[gcode_macro ChamberLED_OFF]
gcode:
    SET_LED LED=ChamberLED GREEN=0.1 RED=0.1 BLUE=0.1

[gcode_macro ChamberLED_Yellow]
gcode:
    SET_LED LED=ChamberLED GREEN=0.9 RED=0.9 BLUE=0.1

[gcode_macro ChamberLED_Red]
gcode:
    SET_LED LED=ChamberLED GREEN=0.1 RED=0.9 BLUE=0.1


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Additional MACROS, creature comforts / non-essential but helpful
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

#...................................................................................................
[gcode_macro NZL_PID]
# Usage: NZL_PID BED_TEMP=95 NZL_TEMP=238
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
        {% set NZL_TEMP = params.NZL_TEMP|default(235)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        G90
        M117 Performing initial homing.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M117 Bringing bed to temperature.
        M190 S{BED_TEMP}
        _HEAT_WAIT MINUTES=12 #    <----------------<----------------<----------------<----------------<----------------<--------<Pre Nozzle-PID Heatsoak Minutes<<<
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=extruder TARGET={NZL_TEMP}
        M117 Finished PID calibration.
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        G90
        _PARK_TOOLHEAD
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
	_COOL_WAIT MINUTES=3
        SAVE_CONFIG
    {% endif %}



#...................................................................................................
[gcode_macro BED_PID]
# Usage: BED_PID BED_TEMP=95
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
    {% else %}
        {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
        {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float -1 %}
        {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float -1 %}
        SET_LED LED=nozzle RED=.5 GREEN=.5 BLUE=0
        G90
        M117 Performing initial homing.
        G32
        G1 Z5 Y{Y_MID} X{X_MID} F3000
        M106 S64
        M117 Starting PID calibration.
        PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
        M117 Finished PID calibration. 
        TURN_OFF_HEATERS
        CURRENT_NORMAL
        _PARK_TOOLHEAD
        M18 X Y E
        SET_LED LED=nozzle RED=.2 GREEN=.5 BLUE=.2
        _COOL_WAIT MINUTES=1
        SAVE_CONFIG
    {% endif %}



#...................................................................................................
[gcode_macro PA_CAL]
description: Tune Pressure Advance
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %}
        {action_respond_info("Cannot do that while printing")}
	
    {% else %}
        {% set BED = params.BED|default(99)|float %}
        {% set EXTRUDER = params.EXTRUDER|default(239)|float %}
        {% set PA_START = params.PA_START|default(0.0)|float %}
        {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
        {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}
        {% set NZL = params.NZL|default(NZL_CFG)|float %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}

        PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER}
		
        G21 ; Millimeter units
        G90 ; Absolute XYZ
        M83 ; Relative E
        SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
        G92 E0
        M106 S0 
		
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000          ; move to start position
        G1 Z0.25 F300                                  ; move to layer height
        G1 E0.75 F1800                                 ; un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300     ; print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000    ; print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300     ; print line part three
        G1 E-0.75 F1800                                ; retract
        G1 Z1 F300                                     ; Move above layer height  
		
        {% for i in range(0, 20) %}
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)} ; set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)}
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000           ; move to start position
            G1 Z0.25 F300                                         ; move to layer height
            G1 E0.75 F1800                                        ; un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000     ; print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300      ; print line part three
            G1 E-0.75 F1800                                       ; retract
            G1 Z1 F300                                            ; Move above layer height  
        {% endfor %}
	
	M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.
	M118 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting.

        PRINT_END
		
    {% endif %}

###########################################################
# Mainsail Macros
##########################################################

#[gcode_macro PAUSE]
#description: Pause the actual running print
#rename_existing: PAUSE_BASE
#gcode:
#  PAUSE_BASE
#  _TOOLHEAD_PARK_PAUSE_CANCEL

#[gcode_macro RESUME]
#description: Resume the actual running print
#rename_existing: RESUME_BASE
#gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
 # {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
 # #### get VELOCITY parameter if specified ####
 # {% if 'VELOCITY' in params|upper %}
#    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#  {%else %}
#   {% set get_params = "" %}
#  {% endif %}
#  ##### end of definitions #####
#  {% if printer.extruder.can_extrude|lower == 'true' %}
#    M83
#    G1 E{extrude} F2100
#    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#  {% else %}
#    {action_respond_info("Extruder not hot enough")}
#  {% endif %}  
#  RESUME_BASE {get_params}

#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
#rename_existing: CANCEL_PRINT_BASE
#variable_park: True
#gcode:
  ## Move head and retract only if not already in the pause state and park set to true
 # {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
  #  _TOOLHEAD_PARK_PAUSE_CANCEL
 # {% endif %}
 # TURN_OFF_HEATERS
  #CANCEL_PRINT_BASE

#[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
#description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
#variable_extrude: 1.0
#gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
#  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
#  {% set max_z = printer.toolhead.axis_maximum.z|float %}
#  {% set act_z = printer.toolhead.position.z|float %}
#  {% if act_z < (max_z - z_park_delta) %}
#    {% set z_safe = z_park_delta %}
#  {% else %}
#    {% set z_safe = max_z - act_z %}
#  {% endif %}
  ##### end of definitions #####
#  {% if printer.extruder.can_extrude|lower == 'true' %}
#    M83
#    G1 E-{extrude} F2100
#    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#  {% else %}
#    {action_respond_info("Extruder not hot enough")}
#  {% endif %}
#  {% if "xyz" in printer.toolhead.homed_axes %}
#    G91
#    G1 Z{z_safe} F900
#    G90
#    G1 X{x_park} Y{y_park} F6000
#    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
#  {% else %}
#    {action_respond_info("Printer not homed")}
#  {% endif %}


#####################################################################
#   Macros
#####################################################################

#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BASE_BED_MESH_CALIBRATE
#gcode:
    #before the original gcode
 #   BED_MESH_CLEAR
 #   QUAD_GANTRY_LEVEL
 #   G1 X125 Y125 Z5 F6000
 #   #the original gcode
 #   BASE_BED_MESH_CALIBRATE
  
#after the original gcode
#
#[gcode_macro G32]
#gcode:
#    SAVE_GCODE_STATE NAME=STATE_G32
#    G90
#    G28
#    QUAD_GANTRY_LEVEL
#    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
#    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
#    RESTORE_GCODE_STATE NAME=STATE_G32
   
#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
 #   G1 Z20 F3000                   ; move nozzle away from bed
   

#[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:
#    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-5.0 F1800                 ; retract filament
    
#    TURN_OFF_HEATERS
    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan
    
#    BED_MESH_CLEAR
#    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#